--- # Start
name: example

# 유저의 github 저장소 정보
url:
docker-image: 

# predefined docker-image를 사용하되, 추가적인 설정이 필요한 경우 이렇게 정의
extra-build-env-setting-commands: 

test-candidates:

time-out: 3600
max-patch-number : 500

test-build-command: | # 테스트 빌드 커맨드 / defect4cpp 기준 meta.json의 내용이 필요
  autoheader
  autoconf
  ./configure --with-tcsetpgrp
  sed -i "/^name=zsh\/zpty/ s/link=no/link=static/" config.modules
  make
  sed -i "s|sleep 1;||" Test/Makefile
  find Test -type f -name "*.ztst" -exec basename {} .ztst \; | sort -t "\\0" > AUTOMAKE_TEST_CASE.output

coverage-build-command: | # 커버리지 빌드 커맨드 / defect4cpp 기준 meta.json의 내용이 필요(SBFL: gcov)
  autoheader
  autoconf
  ./configure --with-tcsetpgrp --enable-cflags=\"--coverage -g -O0\" --enable-libs=\"-lgcov\"
  sed -i \"/^name=zsh\/zpty/ s/link=no/link=static/\" config.modules
  make
  sed -i \"s|sleep 1;||\" Test/Makefile
  find Test -type f -name \"*.ztst\" -exec basename {} .ztst \; | sort -t \"\\0\" > AUTOMAKE_TEST_CASE.output

# 테스트 type이 문제: gtest의 경우 원하는 테스트를 실행할 수 있으니 문제가 없음
# 그렇지 않으면 test-case에 실행할 테스트 번호를 range로 하도록함
# 테스트 실행 역시 range안에 있는 테스트들만 실행하도록 묶어서 command를 부르거나 여러번 불러야함
test-type: automake
test-list: | # 테스트 리스트 커맨드 / 테스트를 하나씩 실행하기 위해 테스트 리스트를 출력해주는 내용 필요
  make -s TESTNUM=$(sed -n "1p" < AUTOMAKE_TEST_CASE.output) check
  make -s TESTNUM=$(sed -n "2p" < AUTOMAKE_TEST_CASE.output) check
  make -s TESTNUM=$(sed -n "3p" < AUTOMAKE_TEST_CASE.output) check
  make -s TESTNUM=$(sed -n "4p" < AUTOMAKE_TEST_CASE.output) check
  make -s TESTNUM=$(sed -n "5p" < AUTOMAKE_TEST_CASE.output) check
  make -s TESTNUM=$(sed -n "6p" < AUTOMAKE_TEST_CASE.output) check
  make -s TESTNUM=$(sed -n "7p" < AUTOMAKE_TEST_CASE.output) check
  make -s TESTNUM=$(sed -n "8p" < AUTOMAKE_TEST_CASE.output) check
  make -s TESTNUM=$(sed -n "9p" < AUTOMAKE_TEST_CASE.output) check
  make -s TESTNUM=$(sed -n "10p" < AUTOMAKE_TEST_CASE.output) check
  make -s TESTNUM=$(sed -n "11p" < AUTOMAKE_TEST_CASE.output) check
  make -s TESTNUM=$(sed -n "12p" < AUTOMAKE_TEST_CASE.output) check
  make -s TESTNUM=$(sed -n "13p" < AUTOMAKE_TEST_CASE.output) check
  make -s TESTNUM=$(sed -n "14p" < AUTOMAKE_TEST_CASE.output) check
  make -s TESTNUM=$(sed -n "15p" < AUTOMAKE_TEST_CASE.output) check
  make -s TESTNUM=$(sed -n "16p" < AUTOMAKE_TEST_CASE.output) check
  make -s TESTNUM=$(sed -n "17p" < AUTOMAKE_TEST_CASE.output) check
  make -s TESTNUM=$(sed -n "18p" < AUTOMAKE_TEST_CASE.output) check
  make -s TESTNUM=$(sed -n "19p" < AUTOMAKE_TEST_CASE.output) check
  make -s TESTNUM=$(sed -n "20p" < AUTOMAKE_TEST_CASE.output) check
  make -s TESTNUM=$(sed -n "21p" < AUTOMAKE_TEST_CASE.output) check
  make -s TESTNUM=$(sed -n "22p" < AUTOMAKE_TEST_CASE.output) check
  make -s TESTNUM=$(sed -n "23p" < AUTOMAKE_TEST_CASE.output) check
  make -s TESTNUM=$(sed -n "24p" < AUTOMAKE_TEST_CASE.output) check
  make -s TESTNUM=$(sed -n "25p" < AUTOMAKE_TEST_CASE.output) check
  make -s TESTNUM=$(sed -n "26p" < AUTOMAKE_TEST_CASE.output) check
  make -s TESTNUM=$(sed -n "27p" < AUTOMAKE_TEST_CASE.output) check
  make -s TESTNUM=$(sed -n "29p" < AUTOMAKE_TEST_CASE.output) check
  make -s TESTNUM=$(sed -n "30p" < AUTOMAKE_TEST_CASE.output) check
  make -s TESTNUM=$(sed -n "31p" < AUTOMAKE_TEST_CASE.output) check
  make -s TESTNUM=$(sed -n "32p" < AUTOMAKE_TEST_CASE.output) check
  make -s TESTNUM=$(sed -n "33p" < AUTOMAKE_TEST_CASE.output) check
  make -s TESTNUM=$(sed -n "34p" < AUTOMAKE_TEST_CASE.output) check
  make -s TESTNUM=$(sed -n "35p" < AUTOMAKE_TEST_CASE.output) check
  make -s TESTNUM=$(sed -n "36p" < AUTOMAKE_TEST_CASE.output) check
  make -s TESTNUM=$(sed -n "37p" < AUTOMAKE_TEST_CASE.output) check
  make -s TESTNUM=$(sed -n "39p" < AUTOMAKE_TEST_CASE.output) check
  make -s TESTNUM=$(sed -n "40p" < AUTOMAKE_TEST_CASE.output) check
  make -s TESTNUM=$(sed -n "41p" < AUTOMAKE_TEST_CASE.output) check
  make -s TESTNUM=$(sed -n "42p" < AUTOMAKE_TEST_CASE.output) check
  make -s TESTNUM=$(sed -n "43p" < AUTOMAKE_TEST_CASE.output) check
  make -s TESTNUM=$(sed -n "44p" < AUTOMAKE_TEST_CASE.output) check
  make -s TESTNUM=$(sed -n "45p" < AUTOMAKE_TEST_CASE.output) check
  make -s TESTNUM=$(sed -n "46p" < AUTOMAKE_TEST_CASE.output) check
  make -s TESTNUM=$(sed -n "47p" < AUTOMAKE_TEST_CASE.output) check
  make -s TESTNUM=$(sed -n "48p" < AUTOMAKE_TEST_CASE.output) check
  make -s TESTNUM=$(sed -n "49p" < AUTOMAKE_TEST_CASE.output) check
  make -s TESTNUM=$(sed -n "50p" < AUTOMAKE_TEST_CASE.output) check
  make -s TESTNUM=$(sed -n "51p" < AUTOMAKE_TEST_CASE.output) check
  make -s TESTNUM=$(sed -n "52p" < AUTOMAKE_TEST_CASE.output) check
  make -s TESTNUM=$(sed -n "53p" < AUTOMAKE_TEST_CASE.output) check
  make -s TESTNUM=$(sed -n "54p" < AUTOMAKE_TEST_CASE.output) check
  make -s TESTNUM=$(sed -n "55p" < AUTOMAKE_TEST_CASE.output) check
  make -s TESTNUM=$(sed -n "56p" < AUTOMAKE_TEST_CASE.output) check
  make -s TESTNUM=$(sed -n "57p" < AUTOMAKE_TEST_CASE.output) check
  make -s TESTNUM=$(sed -n "58p" < AUTOMAKE_TEST_CASE.output) check
  make -s TESTNUM=$(sed -n "59p" < AUTOMAKE_TEST_CASE.output) check
  make -s TESTNUM=$(sed -n "60p" < AUTOMAKE_TEST_CASE.output) check
  make -s TESTNUM=$(sed -n "61p" < AUTOMAKE_TEST_CASE.output) check
  make -s TESTNUM=$(sed -n "62p" < AUTOMAKE_TEST_CASE.output) check
  make -s TESTNUM=$(sed -n "63p" < AUTOMAKE_TEST_CASE.output) check

test-case: 

test-command: | # 테스트 실행
  bash -c "@testcase@"

test-coverage-command: | # 커버리지 테스트 실행 / 테스트 대상을 입력받아서 하나씩 실행할 수 있어야 함
  bash -c "@testcase@"
